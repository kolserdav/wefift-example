import Event from "rx.mini";
import { RtpPacket } from "..";
import { SupportedCodec } from "../container/webm";
import { Output } from "./base";
export declare class WebmOutput implements Output {
    /**fs/promises */
    private fs;
    path: string;
    tracks: {
        width?: number;
        height?: number;
        kind: "audio" | "video";
        codec: SupportedCodec;
        clockRate: number;
        payloadType: number;
        trackNumber: number;
    }[];
    private builder;
    private queue;
    private relativeTimestamp;
    private timestamps;
    private disposer?;
    private cuePoints;
    private position;
    stopped: boolean;
    constructor(
    /**fs/promises */
    fs: any, path: string, tracks: {
        width?: number;
        height?: number;
        kind: "audio" | "video";
        codec: SupportedCodec;
        clockRate: number;
        payloadType: number;
        trackNumber: number;
    }[], streams?: {
        rtpStream?: Event<[RtpPacket]>;
    });
    private init;
    stop(): Promise<void>;
    pushRtpPackets(packets: RtpPacket[]): void;
    private onRtpPackets;
    private dePacketizeRtpPackets;
}
