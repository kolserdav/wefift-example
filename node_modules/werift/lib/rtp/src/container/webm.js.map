{"version":3,"file":"webm.js","sourceRoot":"","sources":["../../../../../rtp/src/container/webm.ts"],"names":[],"mappings":"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","sourcesContent":["import * as EBML from \"@shinyoshiaki/ebml-builder\";\n\nimport { BitWriter2, BufferChain } from \"../../../common/src\";\nimport { OpusRtpPayload } from \"..\";\n\nexport class WEBMBuilder {\n  readonly ebmlHeader = EBML.build(\n    EBML.element(EBML.ID.EBML, [\n      EBML.element(EBML.ID.EBMLVersion, EBML.number(1)),\n      EBML.element(EBML.ID.EBMLReadVersion, EBML.number(1)),\n      EBML.element(EBML.ID.EBMLMaxIDLength, EBML.number(4)),\n      EBML.element(EBML.ID.EBMLMaxSizeLength, EBML.number(8)),\n      EBML.element(EBML.ID.DocType, EBML.string(\"webm\")),\n      EBML.element(EBML.ID.DocTypeVersion, EBML.number(2)),\n      EBML.element(EBML.ID.DocTypeReadVersion, EBML.number(2)),\n    ])\n  );\n  trackEntries: EBML.EBMLData[] = [];\n\n  constructor(\n    tracks: {\n      width?: number;\n      height?: number;\n      kind: \"audio\" | \"video\";\n      codec: SupportedCodec;\n      trackNumber: number;\n    }[]\n  ) {\n    this.trackEntries = tracks.map(\n      ({ width, height, kind, codec, trackNumber }) => {\n        return this.createTrackEntry(kind, trackNumber, codec, {\n          width,\n          height,\n        });\n      }\n    );\n  }\n\n  createTrackEntry(\n    kind: string,\n    trackNumber: number,\n    codec: string,\n    { width, height }: Partial<{ kind: string; width: number; height: number }>\n  ) {\n    const trackElements: EBML.EBMLData[] = [];\n    if (kind === \"video\") {\n      trackElements.push(\n        EBML.element(EBML.ID.Video, [\n          EBML.element(EBML.ID.PixelWidth, EBML.number(width)),\n          EBML.element(EBML.ID.PixelHeight, EBML.number(height)),\n        ])\n      );\n    } else {\n      trackElements.push(\n        EBML.element(EBML.ID.Audio, [\n          EBML.element(EBML.ID.SamplingFrequency, EBML.float(48000.0)),\n          EBML.element(EBML.ID.Channels, EBML.number(2)),\n        ])\n      );\n      // only support OPUS\n      trackElements.push(\n        EBML.element(\n          EBML.ID.CodecPrivate,\n          EBML.bytes(OpusRtpPayload.createCodecPrivate())\n        )\n      );\n    }\n\n    const trackEntry = EBML.element(EBML.ID.TrackEntry, [\n      EBML.element(EBML.ID.TrackNumber, EBML.number(trackNumber)),\n      EBML.element(EBML.ID.TrackUID, EBML.number(trackNumber)),\n      EBML.element(EBML.ID.CodecName, EBML.string(codec)),\n      EBML.element(EBML.ID.TrackType, EBML.number(kind === \"video\" ? 1 : 2)),\n      EBML.element(\n        EBML.ID.CodecID,\n        EBML.string(`${kind === \"video\" ? \"V\" : \"A\"}_${codec}`)\n      ),\n      ...trackElements,\n    ]);\n    return trackEntry;\n  }\n\n  createSegment(duration?: number) {\n    const elements = [\n      EBML.element(EBML.ID.TimecodeScale, EBML.number(millisecond)),\n      EBML.element(EBML.ID.MuxingApp, EBML.string(\"webrtc\")),\n      EBML.element(EBML.ID.WritingApp, EBML.string(\"webrtc\")),\n    ];\n    if (duration) {\n      elements.push(EBML.element(EBML.ID.Duration, EBML.float(duration)));\n    }\n    return EBML.build(\n      EBML.unknownSizeElement(EBML.ID.Segment, [\n        EBML.element(EBML.ID.SeekHead, []),\n        EBML.element(EBML.ID.Info, elements),\n        EBML.element(EBML.ID.Tracks, this.trackEntries),\n      ])\n    );\n  }\n\n  createCuePoint(\n    relativeTimestamp: number,\n    trackNumber: number,\n    clusterPosition: number,\n    blockNumber: number\n  ) {\n    return EBML.element(EBML.ID.CuePoint, [\n      EBML.element(EBML.ID.CueTime, EBML.number(relativeTimestamp)),\n      EBML.element(EBML.ID.CueTrackPositions, [\n        EBML.element(EBML.ID.CueTrack, EBML.number(trackNumber)),\n        EBML.element(EBML.ID.CueClusterPosition, EBML.number(clusterPosition)),\n        EBML.element(EBML.ID.CueBlockNumber, EBML.number(blockNumber)),\n      ]),\n    ]);\n  }\n\n  createCues(cuePoints: EBML.EBMLData[]) {\n    return EBML.build(EBML.element(EBML.ID.Cues, cuePoints));\n  }\n\n  createCluster(timecode: number) {\n    return EBML.build(\n      EBML.unknownSizeElement(EBML.ID.Cluster, [\n        EBML.element(EBML.ID.Timecode, EBML.number(timecode)),\n      ])\n    );\n  }\n\n  createSimpleBlock(\n    data: Buffer,\n    isKeyframe: boolean,\n    trackNumber: number,\n    relativeTimestamp: number\n  ) {\n    const elementId = Buffer.from([0xa3]);\n    const contentSize: Uint8Array = EBML.vintEncodedNumber(\n      1 + 2 + 1 + data.length\n    ).bytes;\n\n    const keyframe = isKeyframe ? 1 : 0;\n    const flags = new BitWriter2(8)\n      .set(keyframe)\n      .set(0, 3)\n      .set(0)\n      .set(0, 2)\n      .set(0);\n\n    const simpleBlock = Buffer.concat([\n      elementId,\n      contentSize,\n      EBML.vintEncodedNumber(trackNumber).bytes,\n      new BufferChain(2).writeInt16BE(relativeTimestamp).buffer,\n      new BufferChain(1).writeUInt8(flags.value).buffer,\n      data,\n    ]);\n    return simpleBlock;\n  }\n}\n\nconst supportedCodecs = [\"MPEG4/ISO/AVC\", \"VP8\", \"VP9\", \"AV1\", \"OPUS\"] as const;\nexport type SupportedCodec = typeof supportedCodecs[number];\nconst millisecond = 1000000;\n"]}