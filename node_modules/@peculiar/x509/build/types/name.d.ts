import { Name as AsnName } from "@peculiar/asn1-x509";
export interface IdOrName {
    [idOrName: string]: string;
}
export declare class NameIdentifier {
    private items;
    get(idOrName: string): string | null;
    register(id: string, name: string): void;
}
export interface JsonAttributeAndValue {
    [type: string]: string[];
}
export declare type JsonName = Array<JsonAttributeAndValue>;
export declare class Name {
    private extraNames;
    static isASCII(text: string): boolean;
    private asn;
    constructor(data: BufferSource | AsnName | string | JsonName, extraNames?: IdOrName);
    private getName;
    toString(): string;
    toJSON(): JsonName;
    private fromString;
    private fromJSON;
    toArrayBuffer(): ArrayBuffer;
    getThumbprint(crypto?: Crypto): Promise<ArrayBuffer>;
    getThumbprint(algorithm: globalThis.AlgorithmIdentifier, crypto?: Crypto): Promise<ArrayBuffer>;
}
