import { Extension } from "./extension";
import { X509CrlReason } from "./x509_crl_entry";
import { X509Crl } from "./x509_crl";
import { X509CertificateCreateParamsName } from "./x509_cert_generator";
export interface X509CrlEntryParams {
    serialNumber: string;
    revocationDate?: Date;
    reason?: X509CrlReason;
    invalidity?: Date;
    issuer?: X509CertificateCreateParamsName;
    extensions?: Extension[];
}
export interface X509CrlCreateParamsBase {
    issuer: X509CertificateCreateParamsName;
    thisUpdate?: Date;
    signingAlgorithm: Algorithm | EcdsaParams;
}
export interface X509CrlCreateParams extends X509CrlCreateParamsBase {
    nextUpdate?: Date;
    extensions?: Extension[];
    entries?: X509CrlEntryParams[];
    signingKey: CryptoKey;
}
export declare class X509CrlGenerator {
    static create(params: X509CrlCreateParams, crypto?: Crypto): Promise<X509Crl>;
}
