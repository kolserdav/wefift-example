import { CertificationRequest } from "@peculiar/asn1-csr";
import { Name } from "./name";
import { HashedAlgorithm } from "./types";
import { Attribute } from "./attribute";
import { Extension } from "./extension";
import { IPublicKeyContainer, PublicKey } from "./public_key";
import { AsnEncodedType, PemData } from "./pem_data";
export declare class Pkcs10CertificateRequest extends PemData<CertificationRequest> implements IPublicKeyContainer {
    protected readonly tag: string;
    private tbs;
    subjectName: Name;
    subject: string;
    signatureAlgorithm: HashedAlgorithm;
    signature: ArrayBuffer;
    publicKey: PublicKey;
    attributes: Attribute[];
    extensions: Extension[];
    constructor(raw: AsnEncodedType);
    constructor(asn: CertificationRequest);
    protected onInit(asn: CertificationRequest): void;
    getAttribute(type: string): Attribute | null;
    getAttributes(type: string): Attribute[];
    getExtension(type: string): Extension | null;
    getExtensions(type: string): Extension[];
    verify(crypto?: Crypto): Promise<boolean>;
}
